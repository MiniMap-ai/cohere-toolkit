name: Create and publish frontend image

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tags:
        description: 'Docker image tag (e.g: v0.0.1)'
        required: false
        type: string

env:
  IMAGE_NAME: cohere-toolkit-frontend

jobs:
  build-and-push-frontend-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}

      - name: Authenticate Docker to Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGISTRY }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./src/interfaces/coral_web
          tags: ${{ steps.meta.outputs.tags }}
          push: true

      # - name: Checkout repository
      #   uses: actions/checkout@v2

      # - name: Auth
      #   uses: google-github-actions/auth@v1
      #   with:
      #     credentials_json: ${{ secrets.GCP_SA_KEY }}

      # - name: Set up Cloud SDK
      #   uses: google-github-actions/setup-gcloud@v2
      #   with:
      #     project_id: ${{ secrets.GCP_PROJECT_ID }}

      # - name: Configure Docker
      #   run: gcloud auth configure-docker

      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@v3
      #   with:
      #     images: ${{ vars.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Deploy the image to Cloud Run
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.IMAGE_NAME }} \
            --project=${{ vars.GCP_PROJECT_ID }} \
            --image=${{ steps.meta.outputs.tags }} \
            --platform=managed \
            --region=us-central1 \
            --allow-unauthenticated \
            --update-env-vars=DATABASE_URL=${{ secrets.DATABASE_URL }},COHERE_API_KEY=${{ secrets.COHERE_API_KEY }},MINIMAP_API_URL=${{ vars.MINIMAP_API_URL }} \
            --memory=4Gi \
            --cpu=4 \
            --max-instances=1